@page "/medicamentos"
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<h1>
    Gestión de Medicamentos
</h1>

<div class="card dcard">
    <div class="card-body px-1 px-md-3">

        <form autocomplete="off">
            <div class="d-flex justify-content-between flex-column flex-sm-row mb-3 px-2 px-sm-0">
                <h3 class="text-125 pl-1 mb-3 mb-sm-0 text-secondary-d4">
                    Listado de Medicamentos
                </h3>

                <div class="mb-2 mb-sm-0">
                    <button type="button" class="btn btn-blue px-3 d-block w-100 text-95 radius-round border-2 brc-black-tp10" @onclick="MostrarModalDeAgregar">
                        <i class="fa fa-plus mr-1"></i>
                        Agregar <span class="d-sm-none d-md-inline">Medicamento</span>
                    </button>
                </div>
            </div>

            @if (ListaDeMedicamentos == null)
            {
                <p><em>Cargando Listado De Medicamentos...</em></p>
            }
            else
            {
                <table id="simple-table" class="mb-0 table table-borderless table-bordered-x brc-secondary-l3 text-dark-m2 radius-1 overflow-hidden">
                    <thead class="text-dark-tp3 bgc-grey-l4 text-90 border-b-1 brc-transparent">
                        <tr>
                            <th>Id Medicamento</th>
                            <th>Nombre de Medicamento</th>
                            <th>Precio</th>
                        </tr>
                    </thead>

                    <tbody class="mt-1">

                        @foreach (var Medicamento in ListaDeMedicamentos)
                        {
                            <tr class="bgc-h-yellow-l4 d-style">
                                <td class="d-none d-sm-table-cell text-grey-d1">@Medicamento.IdMedicamento</td>
                                <td class="text-600 text-dark">@Medicamento.NombreMedicamento</td>
                                <td class="text-600 text-orange-d2">@Medicamento.Precio</td>
                                <td>
                                    <div class="d-none d-lg-flex">
                                        @*<a href="#" class="mx-2px btn radius-1 border-2 btn-xs btn-brc-tp btn-light-secondary btn-h-lighter-success btn-a-lighter-success">
                                                <i class="fa fa-pencil-alt"></i>
                                            </a>*@

                                        <button type="button" class="btn btn-primary" @onclick="() => MostrarModalDeActualizar(Medicamento.IdMedicamento)">Editar</button>

                                        <a href="#" class="mx-2px btn radius-1 border-2 btn-xs btn-brc-tp btn-light-secondary btn-h-lighter-danger btn-a-lighter-danger">
                                            <i class="fa fa-trash-alt"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }

        </form>
    </div>
</div>

<div class="modal fade" id="ModalEdicionDeMedicamento" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-primary-d3" id="exampleModalLabel">
                    @(AccionDeEdicion + " " + "Medicamento")
                </h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <EditForm Model="@MedicamentoDtoModel" OnValidSubmit="@GuardarMedicamento">

                <DataAnnotationsValidator />

                <div class="modal-body">

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="IdMedicamento" class="mb-0">Id Medicamento</label>
                        </div>

                        <div class="col-sm-8">
                            <InputNumber id="IdMedicamento" @bind-Value="@MedicamentoDtoModel.IdMedicamento" disabled="@(AccionDeEdicion == "Actualizar" ? true : false)"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese el ID de la Medicamento" />
                            <ValidationMessage For="() => MedicamentoDtoModel.IdMedicamento" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="NombreMedicamento" class="mb-0">Nombre de la Medicamento</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="NombreMedicamento" @bind-Value="@MedicamentoDtoModel.NombreMedicamento"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese el nombre de la Medicamento" />
                            <ValidationMessage For="() => MedicamentoDtoModel.NombreMedicamento" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="Precio" class="mb-0">Precio</label>
                        </div>

                        <div class="col-sm-8">
                            <InputNumber id="Precio" @bind-Value="@MedicamentoDtoModel.Precio"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese la Precio" />
                            <ValidationMessage For="() => MedicamentoDtoModel.Precio" />
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary px-4" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalConfirmacionDeEliminacionDeMedicamento" tabindex="-1" role="dialog" aria-labelledby="LabelConfirmacionDeEliminacionDeMedicamento" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title text-primary-d3" id="LabelConfirmacionDeEliminacionDeMedicamento">
                    Eliminar Medicamento
                </h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <EditForm Model="@MedicamentoDtoModel">


                <div class="modal-body">

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="MedicamentoPorEliminarIdMedicamento" class="mb-0">Id Medicamento</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="MedicamentoPorEliminarIdMedicamento" class="form-control col-sm-12 col-md-12">@MedicamentoDtoModel.IdMedicamento</label>
                        </div>
                    </div>


                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="MedicamentoPorEliminarNombreMedicamento" class="mb-0">Nombre Medicamento</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="MedicamentoPorEliminarNombreMedicamento" class="form-control col-sm-12 col-md-12">@MedicamentoDtoModel.NombreMedicamento</label>
                        </div>
                    </div>


                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="MedicamentoPorEliminarPrecio" class="mb-0">Precio</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="MedicamentoPorEliminarPrecio" class="form-control col-sm-12 col-md-12" disable>@MedicamentoDtoModel.Precio</label>
                        </div>
                    </div>

                    <div class="alert bgc-orange-l3 brc-orange-l1 text-dark-tp1" role="alert">
                        Desea
                        <a class="alert-link text-danger-d1">
                            Eliminar
                        </a>
                        este registro?
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary px-4" data-dismiss="modal">No</button>
                    <button type="button" class="btn btn-primary px-4" @onclick="ConfirmarEliminacionDeMedicamento">Sí</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    private MedicamentosDto[] ListaDeMedicamentos;

    private MedicamentosDto MedicamentoDtoModel = new();

    private string AccionDeEdicion = "";

    private int IdMedicamentoPorActualizar;

    private int IdMedicamentoPorEliminar;

    private string UtlHost = "https://localhost:44332/api";

    protected override async Task OnInitializedAsync()
    {
        await ObtenerMedicamentos();
    }



    private async Task MostrarModalDeAgregar()
    {

        AccionDeEdicion = "Agregar";

        MedicamentoDtoModel = new();

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalEdicionDeMedicamento");

    }

    private async Task MostrarModalDeActualizar(int IdMedicamento)
    {

        AccionDeEdicion = "Actualizar";

        await ObtenerMedicamentoPorId(IdMedicamento);

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalEdicionDeMedicamento");

    }

    private async Task GuardarMedicamento()
    {
        if (AccionDeEdicion == "Agregar")
        {
            await AgregarMedicamento();
        }
        else
        {
            await ActualizarMedicamento();
        }
    }

    private async Task MostrarModalDeEliminar(int idMedicamento)
    {

        await ObtenerMedicamentoPorId(idMedicamento);

        IdMedicamentoPorEliminar = idMedicamento;

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalConfirmacionDeEliminacionDeMedicamento");
    }

    private async Task ConfirmarEliminacionDeMedicamento()
    {

        await EliminarMedicamento();

    }

    #region Acciones del modelo que van al API

    private async Task ObtenerMedicamentos()
    {
        ListaDeMedicamentos = await Http.GetFromJsonAsync<MedicamentosDto[]>($"{UtlHost}/Medicamentos");
    }

    private async Task ObtenerMedicamentoPorId(int IdMedicamento)
    {
        MedicamentoDtoModel = await Http.GetFromJsonAsync<MedicamentosDto>($"{UtlHost}/Medicamentos/{IdMedicamento}");

        IdMedicamentoPorActualizar = MedicamentoDtoModel.IdMedicamento;

    }

    private async Task AgregarMedicamento()
    {
        var Medicamento = MedicamentoDtoModel;

        using var response = await Http.PostAsJsonAsync($"{UtlHost}/Medicamentos", Medicamento);

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalEdicionDeMedicamento");

            await ObtenerMedicamentos();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Medicamento agregada correctamente");

        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "No se pudo agregar el Medicamento ");

        }
    }

    private async Task ActualizarMedicamento()
    {
        var Medicamento = MedicamentoDtoModel;

        using var response = await Http.PutAsJsonAsync($"{UtlHost}/Medicamentos/{IdMedicamentoPorActualizar}", Medicamento);

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalEdicionDeMedicamento");

            await ObtenerMedicamentos();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Medicamento actualizada correctamente");
        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "No se pudo actualizar el Medicamento ");

        }
    }

    private async Task EliminarMedicamento()
    {
        using var response = await Http.DeleteAsync($"{UtlHost}/Medicamentos/{IdMedicamentoPorEliminar}");

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalConfirmacionDeEliminacionDeMedicamento");

            await ObtenerMedicamentos();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Medicamento eliminada correctamente");
        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "Error al eliminar el Medicamento");

        }
    }

    #endregion
}

